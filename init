#!/usr/bin/python
import json
from subprocess import call
import shlex
import os.path

path = "/home/kcpclient/"
ss_config_file = path + "shadowsocks.json"
pen_config_file = path + "pen.json"
kcp_max_number = 4

def command_runner(_cmdlist):
    # TODO
    for key in sorted(_cmdlist.iterkeys()):
      print "calling " + key
      call(_cmdlist[key], shell=True) 

def command_generater():
	if os.path.isfile(pen_config_file) == False:
		print "File " + pen_config_file + " Not Found!"
		return {}
	if os.path.isfile(ss_config_file) == False:	
		print "File " + ss_config_file + " Not Found!"
		return {}

	_cmdlist = {}

	# basic pen command
	pen_config = json.loads(open(pen_config_file).read())
	pen_cmd = "pen -f -r -x " + pen_config["max_connection"] + " 127.0.0.1:" + pen_config["port"]

	# generate kcp commands
	i=1
	while (i <= kcp_max_number):
		kcp_name = "kcp" + str(i)
		kcp_config_file = path + kcp_name + ".json"

		if os.path.isfile(kcp_config_file):
			kcp_config = json.loads(open(kcp_config_file).read())
			_cmdlist[kcp_name] = "client_linux_amd64 -c " + kcp_config_file + " &"
			pen_cmd = pen_cmd + " " + kcp_config["localaddr"]
		i = i + 1

	if len(_cmdlist) == 0:
		print "No kcp config file found in " + path + " !"
		return {}

	_cmdlist["pen"] = pen_cmd + " &"
	_cmdlist["ss"] = "ss-redir -c " + ss_config_file

	return _cmdlist

command_runner(command_generater())
